{"mappings":"AAAA,MAAMA,UAAoBC,YACxBC,cACEC,O,CAGFC,oBACE,MAAMC,EAAcC,KAAKC,cAAc,iBACjCC,EAAaF,KAAKC,cAAc,gBAChCE,EAAQH,KAAKC,cAAc,mBAEjCC,EAAWE,MAAMC,QAAU,OAE3BN,EAAYO,iBAAiB,SAAS,KACP,SAA7BJ,EAAWE,MAAMC,SACbH,EAAYE,MAAMC,QAAU,QAC3BF,EAAMC,MAAMG,UAAY,mBACzBL,EAAYE,MAAMC,QAAU,OAC3BF,EAAMC,MAAMG,UAAY,YAAY,G,EAK/CC,eAAeC,OAAO,oBAAqBf","sources":["src/js/custom-element-rules.js"],"sourcesContent":["class CustomRules extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    const showedBlock = this.querySelector('.showed-block');\n    const hiddenData = this.querySelector('.hidden-data');\n    const arrow = this.querySelector('.js-rules-arrow');\n\n    hiddenData.style.display = 'none';\n\n    showedBlock.addEventListener('click', () => {\n      hiddenData.style.display === 'none'\n        ? (hiddenData.style.display = 'block') &&\n          (arrow.style.transform = 'rotate(180deg)')\n        : (hiddenData.style.display = 'none') &&\n          (arrow.style.transform = 'rotate(0)');\n    });\n  }\n}\n\ncustomElements.define('custom-rules-view', CustomRules);\n"],"names":["$db93a399d83c7b29$var$CustomRules","HTMLElement","constructor","super","connectedCallback","showedBlock","this","querySelector","hiddenData","arrow","style","display","addEventListener","transform","customElements","define"],"version":3,"file":"instructions.d2cd9942.js.map"}